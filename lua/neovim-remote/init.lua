local M = {}

function M.setup(opts)
	opts = opts or {}

	vim.cmd([[
		function! s:panic(ch, data, ...) abort
				echom a:data
		endfunction


		function! s:RequireNeovimRemote(host) abort
				" TODO: remove ./ part, neovim-remote should be presented in PATH
				return jobstart(['./neovim-remote'], {'rpc': v:true, 'on_stderr': function('s:panic')})
		endfunction

		call remote#host#Register('neovim-remote', 'x', function('s:RequireNeovimRemote'))
		" The following lines are generated by running:
		" neovim-remote --manifest neovim-remote
		call remote#host#RegisterPlugin('neovim-remote', '0', [
			\ {'type': 'autocmd', 'name': 'BufReadCmd', 'sync': 0, 'opts': {'eval': '{''Buffer'': bufnr(), ''BufferName'': bufname()}', 'pattern': 'remote://*'}},
			\ {'type': 'autocmd', 'name': 'BufWriteCmd', 'sync': 0, 'opts': {'eval': '{''Buffer'': bufnr(), ''BufferName'': bufname()}', 'pattern': 'remote://*'}},
			\ {'type': 'autocmd', 'name': 'FileReadCmd', 'sync': 0, 'opts': {'eval': '{''Buffer'': bufnr(), ''BufferName'': bufname()}', 'pattern': 'remote://*'}},
			\ ])

	]])
end

return M
